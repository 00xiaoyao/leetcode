给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31,  2^31 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

总结：最开始的思路是转化成字符串再转化成数组再反转再转回数字，中间有些成功，但最后转不回来，而且对于边界条件的判断以及有正负号和结尾是0
无法处理，自己思路完全陷入困境

查看题解，有一种解法，一条语句直接写完，思路跟我类似：先用String()转化成字符串，再用split('')转换成数组，再过滤掉符号后
对用reverse()对数组进行反转，最后join(''),在返回语句中对是否溢出进行判断。
而最短时间的解法，是通过移位循环，一位位取余将数字反转，用result = result * 10 + x%10实现，然后对结果进行是否溢出判断，返回。

